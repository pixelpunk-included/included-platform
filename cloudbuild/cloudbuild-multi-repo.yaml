# Cloud Build - Orquestra√ß√£o Multi-Reposit√≥rio
# Arquivo para coordenar builds entre os 3 reposit√≥rios do projeto

steps:
  # ===== FASE 1: BUILD DOS COMPONENTES BASE =====
  
  # Build do Reposit√≥rio 1 (included-platform - este repo)
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/included-backend:$COMMIT_SHA',
      '-t', 'gcr.io/$PROJECT_ID/included-backend:latest',
      '-f', 'included-backend/Dockerfile',
      'included-backend'
    ]
    id: 'build-platform-backend'

  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/included-frontend:$COMMIT_SHA',
      '-t', 'gcr.io/$PROJECT_ID/included-frontend:latest',
      '-f', 'included-frontend/Dockerfile.prod',
      'included-frontend'
    ]
    id: 'build-platform-frontend'

  # ===== FASE 2: TRIGGER REPOSIT√ìRIOS EXTERNOS =====
  
  # Trigger build do Reposit√≥rio 2
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
      'builds', 'submit',
      'https://github.com/${_GITHUB_OWNER}/${_REPO2_NAME}',
      '--config=cloudbuild.yaml',
      '--substitutions=_ENVIRONMENT=${_ENVIRONMENT},_PLATFORM_BACKEND_IMAGE=gcr.io/$PROJECT_ID/included-backend:$COMMIT_SHA,_COMMIT_SHA=$COMMIT_SHA'
    ]
    waitFor: ['build-platform-backend']
    id: 'trigger-repo2'

  # Trigger build do Reposit√≥rio 3
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args: [
      'builds', 'submit',
      'https://github.com/${_GITHUB_OWNER}/${_REPO3_NAME}',
      '--config=cloudbuild.yaml',
      '--substitutions=_ENVIRONMENT=${_ENVIRONMENT},_PLATFORM_FRONTEND_IMAGE=gcr.io/$PROJECT_ID/included-frontend:$COMMIT_SHA,_COMMIT_SHA=$COMMIT_SHA'
    ]
    waitFor: ['build-platform-frontend']
    id: 'trigger-repo3'

  # ===== FASE 3: INTEGRA√á√ÉO E TESTES =====
  
  # Aguardar conclus√£o de todos os builds
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "üîÑ Aguardando conclus√£o de todos os reposit√≥rios..."
        
        # Aguardar builds dos outros repos (implementar polling se necess√°rio)
        sleep 60
        
        echo "‚úÖ Todos os reposit√≥rios foram processados"
    waitFor: ['trigger-repo2', 'trigger-repo3']
    id: 'wait-external-repos'

  # ===== FASE 4: DEPLOY COORDENADO =====
  
  # Deploy do Backend (Reposit√≥rio 1)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      'run', 'deploy', '${_BACKEND_SERVICE}',
      '--image', 'gcr.io/$PROJECT_ID/included-backend:$COMMIT_SHA',
      '--region', '${_REGION}',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--port', '8000',
      '--memory', '512Mi',
      '--cpu', '1',
      '--max-instances', '10',
      '--set-env-vars', 'DJANGO_SETTINGS_MODULE=included_backend.settings,ENVIRONMENT=${_ENVIRONMENT}'
    ]
    waitFor: ['wait-external-repos']
    id: 'deploy-backend'

  # Deploy do Frontend (Reposit√≥rio 1)
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args: [
      'run', 'deploy', '${_FRONTEND_SERVICE}',
      '--image', 'gcr.io/$PROJECT_ID/included-frontend:$COMMIT_SHA',
      '--region', '${_REGION}',
      '--platform', 'managed',
      '--allow-unauthenticated',
      '--port', '80',
      '--memory', '256Mi',
      '--cpu', '1',
      '--max-instances', '10',
      '--set-env-vars', 'API_URL=https://${_BACKEND_SERVICE}-xxxxx-uc.a.run.app'
    ]
    waitFor: ['deploy-backend']
    id: 'deploy-frontend'

  # ===== FASE 5: TESTES DE INTEGRA√á√ÉO =====
  
  # Testes end-to-end entre todos os componentes
  - name: 'gcr.io/cloud-builders/npm'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "üß™ Executando testes de integra√ß√£o multi-repo..."
        
        # Aguardar servi√ßos ficarem online
        sleep 30
        
        # Fazer health check de todos os servi√ßos
        curl -f https://${_BACKEND_SERVICE}-xxxxx-uc.a.run.app/health || exit 1
        curl -f https://${_FRONTEND_SERVICE}-xxxxx-uc.a.run.app/ || exit 1
        
        echo "‚úÖ Todos os servi√ßos est√£o funcionando"
    waitFor: ['deploy-frontend']
    id: 'integration-tests'

# ===== CONFIGURA√á√ïES =====
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  substitution_option: ALLOW_LOOSE

# ===== SUBSTITUI√á√ïES =====
substitutions:
  # Configura√ß√µes gerais
  _ENVIRONMENT: 'production'
  _REGION: 'us-central1'
  
  # Reposit√≥rios externos
  _GITHUB_OWNER: 'pixelpunk-included'
  _REPO2_NAME: 'included-backend'
  _REPO3_NAME: 'included-frontend'
  
  # Servi√ßos
  _BACKEND_SERVICE: 'included-backend'
  _FRONTEND_SERVICE: 'included-frontend'
  
  # Flags de controle
  _SKIP_TESTS: 'false'
  _PARALLEL_BUILD: 'true'

# ===== IMAGENS PRODUZIDAS =====
images:
  - 'gcr.io/$PROJECT_ID/included-backend:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/included-backend:latest'
  - 'gcr.io/$PROJECT_ID/included-frontend:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/included-frontend:latest'

# ===== TIMEOUT =====
timeout: '3600s'  # 1 hora para builds complexos multi-repo 