# Teste de Subm√≥dulos - Cloud Build
# Arquivo para verificar se os subm√≥dulos est√£o sendo inicializados corretamente

steps:
  # ===== DIAGN√ìSTICO INICIAL =====
  - name: 'gcr.io/cloud-builders/git'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "üîç DIAGN√ìSTICO INICIAL"
        echo "Working directory: $(pwd)"
        echo "Arquivos na raiz:"
        ls -la
        echo ""
        echo "Conte√∫do do .gitmodules:"
        cat .gitmodules || echo "‚ùå .gitmodules n√£o encontrado"
        echo ""
        echo "Status dos subm√≥dulos:"
        git submodule status || echo "‚ùå Comando falhou"
    id: 'diagnostic'

  # ===== INICIALIZA√á√ÉO DOS SUBM√ìDULOS =====
  - name: 'gcr.io/cloud-builders/git'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "üîÑ INICIALIZANDO SUBM√ìDULOS"
        
        # Tentar diferentes m√©todos de inicializa√ß√£o
        echo "M√©todo 1: git submodule init + update"
        git submodule init
        git submodule update --recursive
        
        echo ""
        echo "Verificando resultado:"
        ls -la included-backend/ 2>/dev/null && echo "‚úÖ included-backend encontrado" || echo "‚ùå included-backend AUSENTE"
        ls -la included-frontend/ 2>/dev/null && echo "‚úÖ included-frontend encontrado" || echo "‚ùå included-frontend AUSENTE"
        
        echo ""
        echo "Conte√∫do dos diret√≥rios:"
        echo "=== Backend ==="
        ls -la included-backend/ 2>/dev/null || echo "Diret√≥rio vazio ou n√£o existe"
        echo "=== Frontend ==="
        ls -la included-frontend/ 2>/dev/null || echo "Diret√≥rio vazio ou n√£o existe"
        
        echo ""
        echo "Verificando Dockerfiles:"
        test -f included-backend/Dockerfile && echo "‚úÖ Backend Dockerfile encontrado" || echo "‚ùå Backend Dockerfile AUSENTE"
        test -f included-frontend/Dockerfile && echo "‚úÖ Frontend Dockerfile encontrado" || echo "‚ùå Frontend Dockerfile AUSENTE"
        test -f included-frontend/Dockerfile.prod && echo "‚úÖ Frontend Dockerfile.prod encontrado" || echo "‚ùå Frontend Dockerfile.prod AUSENTE"
    waitFor: ['diagnostic']
    id: 'init-submodules'

  # ===== VERIFICA√á√ÉO FINAL =====
  - name: 'gcr.io/cloud-builders/git'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "üìã RELAT√ìRIO FINAL"
        echo "=================="
        
        # Status dos subm√≥dulos
        echo "Status dos subm√≥dulos:"
        git submodule status
        
        echo ""
        echo "Estrutura final do projeto:"
        find . -maxdepth 2 -type f -name "Dockerfile*" || echo "Nenhum Dockerfile encontrado"
        
        echo ""
        echo "Resumo:"
        if [ -f "included-backend/Dockerfile" ] && [ -f "included-frontend/Dockerfile.prod" ]; then
            echo "üéâ SUCESSO: Todos os arquivos necess√°rios foram encontrados!"
            exit 0
        else
            echo "‚ùå FALHA: Arquivos necess√°rios n√£o foram encontrados"
            exit 1
        fi
    waitFor: ['init-submodules']
    id: 'final-check'

# Configura√ß√µes
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_2'

# Timeout curto para teste
timeout: '600s' 