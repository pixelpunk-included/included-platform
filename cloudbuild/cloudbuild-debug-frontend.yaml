# Debug Frontend Build - Cloud Build
# Arquivo para diagnosticar o problema do pnpm-lock.yaml

steps:
  # Inicializar subm√≥dulos
  - name: 'gcr.io/cloud-builders/git'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "üîÑ Inicializando subm√≥dulos..."
        git submodule init
        git submodule update --recursive
        echo "‚úÖ Subm√≥dulos inicializados"
    id: 'init-submodules'

  # Debug: Ver conte√∫do do diret√≥rio frontend
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "üîç DEBUG: Conte√∫do do included-frontend/"
        ls -la included-frontend/
        echo ""
        echo "üîç Procurando por arquivos de lock:"
        find included-frontend/ -name "*lock*" -type f || echo "Nenhum arquivo lock encontrado"
        echo ""
        echo "üîç Verificando package.json:"
        head -10 included-frontend/package.json || echo "package.json n√£o encontrado"
        echo ""
        echo "üîç Verificando se pnpm-lock.yaml existe:"
        if [ -f "included-frontend/pnpm-lock.yaml" ]; then
            echo "‚úÖ pnpm-lock.yaml ENCONTRADO"
            wc -l included-frontend/pnpm-lock.yaml
        else
            echo "‚ùå pnpm-lock.yaml N√ÉO ENCONTRADO"
        fi
    waitFor: ['init-submodules']
    id: 'debug-frontend'

  # Testar build simples s√≥ para ver o erro
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/included-frontend-debug:latest',
      '-f', 'included-frontend/Dockerfile.prod',
      'included-frontend'
    ]
    waitFor: ['debug-frontend']
    id: 'test-build-frontend'

# Configura√ß√µes m√≠nimas
options:
  logging: CLOUD_LOGGING_ONLY

timeout: '600s' 