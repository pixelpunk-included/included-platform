version: "3.8"

services:
  # Backend Django
  backend:
    build: ./included-backend
    container_name: included-backend
    volumes:
      # Mapear todo o código Python para hot reload
      - ./included-backend:/app
      - ./included-backend/static:/app/static
      - ./included-backend/media:/app/media
      # Mapear requirements.txt para reinstalação automática
      - ./included-backend/requirements.txt:/app/requirements.txt
      # Google Cloud Storage key
      - ./included-app-key.json:/app/included-app-key.json:ro
    ports:
      - "8000:8000"
    environment:
      - DEBUG=${DEBUG:-True}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE:-included_backend.settings}
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - MYSQL_DB=${MYSQL_DB:-included_db}
      - MYSQL_HOST=${MYSQL_HOST:-db}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-included123}
      - MYSQL_PORT=${MYSQL_PORT:-3306}
      - MYSQL_USER=${MYSQL_USER:-included}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - SECRET_KEY=${SECRET_KEY:-django-insecure-development-key-change-in-production}
      - GCS_ENABLED=${GCS_ENABLED:-false}
      - GCS_PROJECT_ID=${GCS_PROJECT_ID}
      - GCS_BUCKET_NAME=${GCS_BUCKET_NAME}
      - GCS_LOCATION=${GCS_LOCATION}
      - GCS_SERVICE_ACCOUNT_KEY=${GCS_SERVICE_ACCOUNT_KEY}
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - CREATE_SUPERUSER=${CREATE_SUPERUSER:-false}
    env_file:
      - ./included-backend/.env
    # Comando com auto-reload
    command: python manage.py runserver 0.0.0.0:8000
    networks:
      - included-network
    # Reiniciar automaticamente se o container parar
    restart: unless-stopped
    depends_on:
      - db

  # Frontend React (Principal)
  frontend:
    build: ./included-frontend
    container_name: included-frontend
    volumes:
      # Mapear todo o código source para hot reload
      - ./included-frontend/src:/app/src
      - ./included-frontend/public:/app/public
      # Arquivos de configuração importantes
      - ./included-frontend/index.html:/app/index.html
      - ./included-frontend/vite.config.ts:/app/vite.config.ts
      - ./included-frontend/tsconfig.json:/app/tsconfig.json
      - ./included-frontend/tsconfig.app.json:/app/tsconfig.app.json
      - ./included-frontend/tsconfig.node.json:/app/tsconfig.node.json
      - ./included-frontend/biome.json:/app/biome.json
      - ./included-frontend/components.json:/app/components.json
      # Arquivos de dependências para detecção automática
      - ./included-frontend/package.json:/app/package.json
      - ./included-frontend/pnpm-lock.yaml:/app/pnpm-lock.yaml
      # Volume para node_modules (permitirá reinstalação automática)
      - frontend_node_modules:/app/node_modules
      # Volume para cache do pnpm
      - frontend_pnpm_cache:/root/.pnpm-store
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:8000
      - REACT_APP_API_URL=http://localhost:8000
      - NODE_ENV=development
    depends_on:
      - backend
    networks:
      - included-network
    restart: unless-stopped

  # Banco de dados (opcional para desenvolvimento local)
  db:
    image: mysql:8.0
    container_name: included-db
    environment:
      MYSQL_DATABASE: included_db
      MYSQL_USER: included
      MYSQL_PASSWORD: included123
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - included-network
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped

  # Redis (para cache e sessões)
  redis:
    image: redis:7-alpine
    container_name: included-redis
    ports:
      - "6379:6379"
    networks:
      - included-network
    restart: unless-stopped

  # Storybook para desenvolvimento de componentes
  # storybook:
  #   build:
  #     context: ./included-frontend
  #     dockerfile: Dockerfile.storybook.dev
  #   container_name: included-storybook
  #   ports:
  #     - "6006:6006"
  #   volumes:
  #     # Mapear código source para hot reload
  #     - ./included-frontend/src:/app/src
  #     - ./included-frontend/.storybook:/app/.storybook
  #     - ./included-frontend/stories:/app/stories
  #     # Arquivos de configuração
  #     - ./included-frontend/components.json:/app/components.json
  #     - ./included-frontend/tsconfig.json:/app/tsconfig.json
  #     - ./included-frontend/tsconfig.app.json:/app/tsconfig.app.json
  #     - ./included-frontend/tsconfig.node.json:/app/tsconfig.node.json
  #     - ./included-frontend/biome.json:/app/biome.json
  #     - ./included-frontend/vite.config.ts:/app/vite.config.ts
  #     # Arquivos de dependências
  #     - ./included-frontend/package.json:/app/package.json
  #     - ./included-frontend/pnpm-lock.yaml:/app/pnpm-lock.yaml
  #     # Preservar node_modules como volume nomeado
  #     - storybook_node_modules:/app/node_modules
  #   environment:
  #     - NODE_ENV=development
  #   depends_on:
  #     - frontend
  #   networks:
  #     - included-network
  #   restart: unless-stopped

volumes:
  mysql_data:
  # Volumes nomeados para node_modules (melhor performance)
  frontend_node_modules:
  # storybook_node_modules:
  frontend_pnpm_cache:

networks:
  included-network:
    driver: bridge
